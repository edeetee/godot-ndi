:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/unvermuthet/godot-ndi/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/unvermuthet/godot-ndi/tree/master/doc_classes/NDIFinder.xml.

.. _class_NDIFinder:

NDIFinder
=========

**Inherits:** ``Node``

Detects available NDI sources

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------+------------------------------------------------------------------------+-------------------------+
   | ``PackedStringArray`` | :ref:`extra_ips<class_NDIFinder_property_extra_ips>`                   | ``PackedStringArray()`` |
   +-----------------------+------------------------------------------------------------------------+-------------------------+
   | ``PackedStringArray`` | :ref:`groups<class_NDIFinder_property_groups>`                         | ``PackedStringArray()`` |
   +-----------------------+------------------------------------------------------------------------+-------------------------+
   | ``bool``              | :ref:`show_local_sources<class_NDIFinder_property_show_local_sources>` | ``true``                |
   +-----------------------+------------------------------------------------------------------------+-------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +--------------------------------------------------------------------------+----------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`VideoStreamNDI<class_VideoStreamNDI>`\] | :ref:`get_sources<class_NDIFinder_method_get_sources>`\ (\ ) |const| |
   +--------------------------------------------------------------------------+----------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_NDIFinder_signal_sources_changed:

.. rst-class:: classref-signal

**sources_changed**\ (\ ) :ref:`ðŸ”—<class_NDIFinder_signal_sources_changed>`

Emited when the list of available sources has changed.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_NDIFinder_property_extra_ips:

.. rst-class:: classref-property

``PackedStringArray`` **extra_ips** = ``PackedStringArray()`` :ref:`ðŸ”—<class_NDIFinder_property_extra_ips>`

.. rst-class:: classref-property-setget

- |void| **set_extra_ips**\ (\ value\: ``PackedStringArray``\ )
- ``PackedStringArray`` **get_extra_ips**\ (\ )

The list of additional IP addresses that we should query for sources. For instance, if you want to find the sources on a remote machine that is not on your local sub-net then you can add them here and those sources will be available locally even though they are not mDNS discoverable.

**Note:** The returned array is *copied* and any changes to it will not update the original property value. See ``PackedStringArray`` for more details.

.. rst-class:: classref-item-separator

----

.. _class_NDIFinder_property_groups:

.. rst-class:: classref-property

``PackedStringArray`` **groups** = ``PackedStringArray()`` :ref:`ðŸ”—<class_NDIFinder_property_groups>`

.. rst-class:: classref-property-setget

- |void| **set_groups**\ (\ value\: ``PackedStringArray``\ )
- ``PackedStringArray`` **get_groups**\ (\ )

Which groups you want to search in for sources. Leave empty for default.

**Note:** The returned array is *copied* and any changes to it will not update the original property value. See ``PackedStringArray`` for more details.

.. rst-class:: classref-item-separator

----

.. _class_NDIFinder_property_show_local_sources:

.. rst-class:: classref-property

``bool`` **show_local_sources** = ``true`` :ref:`ðŸ”—<class_NDIFinder_property_show_local_sources>`

.. rst-class:: classref-property-setget

- |void| **set_show_local_sources**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_local_sources**\ (\ )

Include sources from the local machine.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_NDIFinder_method_get_sources:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[:ref:`VideoStreamNDI<class_VideoStreamNDI>`\] **get_sources**\ (\ ) |const| :ref:`ðŸ”—<class_NDIFinder_method_get_sources>`

Sources can only be discovered if **NDIFinder** is inside the tree.

Returns an array of currently available sources according to the settings. The entries can be used directly as the stream for ``VideoStreamPlayer``.

Warning: The array will still be empty when **NDIFinder** is ready. It can take a few seconds to discover NDI sources so make use of the :ref:`sources_changed<class_NDIFinder_signal_sources_changed>` signal.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
