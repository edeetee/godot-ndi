name: GDExtension Build
description: Build GDExtension

inputs:
  platform:
    required: true
    description: Target platform.
  arch:
    required: true
    description: Target architecture.
  float-precision:
    default: "single"
    description: Float precision (single or double).
  target-type:
    default: "template_debug"
    description: Build type (template_debug or template_release).
  scons-cache:
    default: ".scons-cache/"
    description: Scons cache folder name, relative to each scons directory. Must not contain relative path signifiers (. or ..). Must be a transparent path part (empty or 'path/to/directory/', ending in a slash).
  github-token:
    description: GitHub token for cache deletion.

runs:
  using: composite
  steps:
    - name: Setup godot-cpp
      uses: ./godot-cpp/.github/actions/setup-godot-cpp
      with:
        platform: ${{ inputs.platform }}
        windows-compiler: msvc

    - name: Restore .scons_cache
      if: ${{ inputs.scons-cache }}
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ inputs.scons-cache }}
        key: ${{ inputs.platform }}-${{ inputs.arch }}-${{ inputs.float-precision }}-${{ inputs.target-type }}-${{ github.run_id }}
        restore-keys: |
          ${{ inputs.platform }}-${{ inputs.arch }}-${{ inputs.float-precision }}-${{ inputs.target-type }}

    - name: Run SCons
      shell: sh
      env:
        SCONS_CACHE: ${{ inputs.scons-cache }}
      run: |
        scons use_static_cpp=yes use_hot_reload=yes target=${{ inputs.target-type }} platform=${{ inputs.platform }} arch=${{ inputs.arch }} precision=${{ inputs.float-precision }}

    - name: Save .scons_cache
      # If this exact cache key was not restored, save it
      if: ${{ inputs.scons-cache && steps.cache-restore.outputs.cache-hit != 'true' }}
      id: cache-save
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.scons-cache }}
        key: ${{ steps.cache-restore.outputs.cache-primary-key }}

    - name: Delete Stale .scons_cache
      # If we saved a new cache, but also restored an old one, delete the old one
      if: ${{ steps.cache-save.outcome == 'success' && steps.cache-restore.outcome == 'success' && inputs.github-token }}
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        GH_REPO: ${{ github.repository }}
        CACHE_KEY: ${{ steps.cache-restore.outputs.cache-matched-key }}
      run: |
        gh cache delete $CACHE_KEY
